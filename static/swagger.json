{
  "openapi": "3.0.0",
  "info": {
    "description": "Jucatorii de la 344",
    "version": "1.0.0",
    "title": "Full Motion Sound (+9) API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "tags": [
    {
      "name": "Smart Sound System API",
      "description": "An API for a smart audio system meant to be used an entire house."
    }
  ],
  "servers": [
    {
      "url": "/"
    }
  ],
  "paths": {
    "/minihub": {
      "get": {
        "tags": [
          "Mini Hubs"
        ],
        "summary": "Returns a list of all connected MiniHubs",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/minihubsRequest"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Mini Hubs"
        ],
        "summary": "Create a new MiniHub",
        "requestBody": {
          "description": "Mini Hub Post Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/minihubRequestPostBody"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/minihub/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "MiniHub ID",
          "type": "string"
        }
      ],
      "patch": {
        "tags": [
          "Mini Hubs"
        ],
        "summary": "Patch existing Mini Hubs (description, volume, connected_user_id)",
        "requestBody": {
          "description": "Mini Hub Patch Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/minihubRequestPatchBody"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          },
          "400": {
            "description": "Failed. Bad patch data."
          },
          "404": {
            "description": "There is no MiniHub with the chosen ID."
          }
        }
      },
      "delete": {
        "summary": "Delete Mini Hub Request by ID",
        "tags": [
          "Mini Hubs"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Mini Hub ID",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          },
          "400": {
            "description": "Failed. Misunderstood Request."
          },
          "404": {
            "description": "There is no Minihub with this ID."
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns a list of all connected users",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/usersRequest"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Add a new User",
        "requestBody": {
          "description": "User Post Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userPostRequestBody"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/user/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "User ID",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User request with given ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "User ID",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/minihubRequest"
            }
          },
          "400": {
            "description": "Failed. Misunderstood Request."
          },
          "404": {
            "description": "Failed. Book request not found."
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Patch existing Users (room, output, connect_to_minihub)",
        "requestBody": {
          "description": "User Patch Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userRequestPatchBody"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          },
          "400": {
            "description": "Failed. Bad patch data."
          },
          "404": {
            "description": "For more informatin, read the shown message."
          }
        }
      },
      "delete": {
        "summary": "Delete User Request by ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "User ID",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          },
          "400": {
            "description": "Failed. Misunderstood Request."
          },
          "404": {
            "description": "There is no User with this ID."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "id": {
        "properties": {
          "uuid": {
            "type": "string"
          }
        }
      },
      "minihubRequestPostBody": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "port": {
            "type": "integer",
            "nullable": false,
            "format": "int32"
          },
          "volume": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "userPostRequestBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "output": {
            "type": "string"
          },
          "room": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "minihubRequestPatchBody": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": ["change_description", "change_connected_user", "disconnect_user"]
          },
          "description": {
            "type": "string"
          },
          "disconnect_user": {
            "type": "integer",
            "format": "int32"
          },
          "connected_user_id": {
            "type": "integer"
          }
        }
      },
      "userRequestPatchBody": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": ["change_room", "change_output", "connect_to_minihub", "disconnect_from_minihub", "play", "pause", "stop", "resume", "muted", "unmute", "vup", "vdown", "set_time","set_volume"]
          },
          "output": {
            "type": "string"
          },
          "room": {
            "type": "integer",
            "format": "int32"
          },
          "minihub_id": {
            "type": "integer"
          },
          "volume": {
            "type": "integer",
            "format": "int32"
          },
          "time": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "minihubRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "format": "string"
          },
          "connected_user_id": {
            "type": "integer"
          },
          "volume": {
            "type": "integer"
          }
        }
      },
      "minihubsRequest": {
        "type": "object",
        "properties": {
          "minihubRequest": {
            "additionalProperties": {
              "$ref": "#/components/schemas/minihubsRequest"
            }
          }
        }
      },
      "usersRequest": {
        "type": "object",
        "properties": {
          "minihubRequest": {
            "additionalProperties": {
              "$ref": "#/components/schemas/usersRequest"
            }
          }
        }
      }
    }
  }
}